//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.22 at 11:01:13 AM CEST 
//


package org.jvnet.ogc;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for NamedPlaceClassification.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="NamedPlaceClassification">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="CountrySubdivision"/>
 *     &lt;enumeration value="CountrySecondarySubdivision"/>
 *     &lt;enumeration value="Municipality"/>
 *     &lt;enumeration value="MunicipalitySubdivision"/>
 *     &lt;enumeration value="choume-banchi-go"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "NamedPlaceClassification")
@XmlEnum
public enum NamedPlaceClassification {

    @XmlEnumValue("CountrySubdivision")
    COUNTRY_SUBDIVISION("CountrySubdivision"),
    @XmlEnumValue("CountrySecondarySubdivision")
    COUNTRY_SECONDARY_SUBDIVISION("CountrySecondarySubdivision"),
    @XmlEnumValue("Municipality")
    MUNICIPALITY("Municipality"),
    @XmlEnumValue("MunicipalitySubdivision")
    MUNICIPALITY_SUBDIVISION("MunicipalitySubdivision"),
    @XmlEnumValue("choume-banchi-go")
    CHOUME_BANCHI_GO("choume-banchi-go");
    private final String value;

    NamedPlaceClassification(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static NamedPlaceClassification fromValue(String v) {
        for (NamedPlaceClassification c: NamedPlaceClassification.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
